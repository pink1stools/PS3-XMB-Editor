<Controls:MetroWindow x:Class="PS3_XMB_Editor.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:local="clr-namespace:PS3_XMB_Editor"
        mc:Ignorable="d"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:simpleChildWindow="clr-namespace:MahApps.Metro.SimpleChildWindow;assembly=MahApps.Metro.SimpleChildWindow"
                      Title="PS3 XMB Editor" Height="650" Width="800" Loaded="MetroWindow_Loaded">
    <Window.Resources>
        


        <SolidColorBrush x:Key="AccentBrush">Red</SolidColorBrush> 

        <SolidColorBrush x:Key="NormalBackground">#FFE6E6E6</SolidColorBrush>

        <SolidColorBrush x:Key="MouseHovercolor">Red</SolidColorBrush>

        <SolidColorBrush x:Key="CollapsedStroke">#FF545454</SolidColorBrush>

        <SolidColorBrush x:Key="ExpandedStroke">White</SolidColorBrush>

        <SolidColorBrush x:Key="HoverColor">#FFEDEDED</SolidColorBrush>


        <Style TargetType="syncfusion:LayoutTransformer" x:Key="layoutStyle">
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="16"/>
            
            <Setter Property="Template">
                
                <Setter.Value>
                    <ControlTemplate TargetType="syncfusion:LayoutTransformer">
                        <Grid x:Name="TransformRoot" Background="{TemplateBinding Background}">
                            <ContentPresenter
                            x:Name="Presenter"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
    TargetType="syncfusion:ExpandableContentControl" x:Key="expanderContentControlStyle">
            <Setter
      Property="IsEnabled"
      Value="true" />

            <Setter
      Property="IsTabStop"
      Value="False" />
            <Setter
      Property="BorderThickness"
      Value="0" />
            <Setter
      Property="Padding"
      Value="0" />
            <Setter
      Property="HorizontalContentAlignment"
      Value="Left" />
            <Setter
      Property="VerticalContentAlignment"
      Value="Top" />
            <Setter
      Property="Template">
                <Setter.Value>
                    <ControlTemplate
          TargetType="syncfusion:ExpandableContentControl">
                        <ContentPresenter
            x:Name="ContentSite"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Margin="0" Content="{TemplateBinding Content}"
            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type syncfusion:AccordionButton}" x:Key="accordionButtonStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="syncfusion:AccordionButton">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ExpandDirectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="0"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" To="{Binding Source={StaticResource CollapsedStroke},Path=Color}">
                                            </ColorAnimation>
                                            <ColorAnimation Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="header" To="{Binding Source={StaticResource CollapsedStroke},Path=Color}">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="90"/>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandedBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" To="{Binding Source={StaticResource ExpandedStroke},Path=Color}">
                                            </ColorAnimation>
                                            <ColorAnimation Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="header" To="{Binding Source={StaticResource ExpandedStroke},Path=Color}">
                                            </ColorAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked"/>
                                    <VisualState x:Name="Unchecked"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBackground"/>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBackground"/>
                                            <ColorAnimation Duration="0" To="{Binding Source={StaticResource HoverColor},Path=Color}" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="background" />

                                            <!--Code used to changed the foreground color on MouseHover-->
                                            <ColorAnimation To="{Binding Source={StaticResource ExpandedStroke},Path=Color}" 
                                                        Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" 
                                                        Storyboard.TargetName="header" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>

                                        </Storyboard>

                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard/>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.385"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="background" Background="Transparent"
                                >
                                <Grid>
                                    <Border x:Name="NormalBackground"
                                        VerticalAlignment="Stretch"  
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"/>

                                    <Grid  x:Name="ExpandedBackground" Opacity="0">
                                        <Border 
                                        VerticalAlignment="Stretch" Background="{DynamicResource AccentColorBrush}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}"/>
                                    </Grid>

                                    <!--Code used to changed the background color on MouseHover-->
                                    <Grid x:Name="MouseOverBackground"  Opacity="0" >
                                        <Border 
                                        VerticalAlignment="Stretch" Background="{DynamicResource AccentColorBrush2}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}"/>
                                    </Grid>

                                    <Grid Background="Transparent" Margin="{TemplateBinding Padding}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" x:Name="cd0"/>
                                            <ColumnDefinition Width="Auto" x:Name="cd1"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" x:Name="rd0"/>
                                            <RowDefinition Height="Auto" x:Name="rd1"/>
                                        </Grid.RowDefinitions>
                                        <Grid Height="19" Margin="5,0,5,0" Background="Transparent" HorizontalAlignment="Center" x:Name="icon" VerticalAlignment="Center" Width="19" RenderTransformOrigin="0.5,0.5" Grid.Column="1" Grid.Row="0">
                                            <Grid.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform Angle="-90"/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Grid.RenderTransform>
                                            <Path Data="F1M568.254,-7.43524L568.159,-7.34277 567.977,-7.52246 546.559,-28.9417 525.484,-28.9417 549.787,-4.63446 557.439,3.01532 557.619,3.19629 550.067,10.7549 525.758,35.0583 546.834,35.0583 568.254,13.6429 578.792,3.10254 568.254,-7.43524z" 
                                          Stretch="Uniform" Fill="{StaticResource ExpandedStroke}" 
                                          Width="12" Height="12" x:Name="arrow" RenderTransformOrigin="0.5,0.5" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center">
                                                <Path.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                        <syncfusion:LayoutTransformer
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Style="{StaticResource layoutStyle}"
                                        x:Name="header" 
                                        Grid.Column="0"
                                        Grid.Row="0" 
                                        Grid.RowSpan="1" 
                                        FontFamily="{TemplateBinding FontFamily}"
					                    FontSize="{TemplateBinding FontSize}"
					                    FontStretch="{TemplateBinding FontStretch}"
					                    FontStyle="{TemplateBinding FontStyle}"
					                    FontWeight="{TemplateBinding FontWeight}"
                                        Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                    </Grid>
                                </Grid>
                            </Border>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed"
                                   RadiusX="1" RadiusY="1" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type syncfusion:SfAccordion}" x:Key="accordionStyle">
            <Setter Property="BorderBrush" Value="#FFC5C5C5"/>
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <!-- Accordion expects a stackpanel to layout its children. -->
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel VerticalAlignment="Top" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type syncfusion:SfAccordion}">
                        <Grid x:Name="Root" >
                            <VisualStateManager.VisualStateGroups>
                                <!-- common states -->
                                <VisualStateGroup
                x:Name="CommonStates">
                                    <VisualState
                  x:Name="Normal" />
                                    <VisualState
                  x:Name="Pressed" />
                                    <VisualState
                  x:Name="MouseOver" />
                                    <VisualState
                  x:Name="Disabled" />
                                </VisualStateGroup>
                                <!-- focus states -->
                                <VisualStateGroup
                x:Name="FocusStates">
                                    <VisualState
                  x:Name="Focused" />
                                    <VisualState
                  x:Name="Unfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border
              x:Name="Border"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}">
                                <ScrollViewer 
                IsTabStop="False" x:Name="PART_ScrollViewer"
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Auto"
                Background="{x:Null}"
                BorderBrush="Transparent"
                Margin="0"
                Padding="0"
                BorderThickness="0">
                                    <ItemsPresenter x:Name="PART_ItemsPresenter"/>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="Accordionitems" TargetType="{x:Type syncfusion:SfAccordionItem}">
            <Setter Property="Margin" Value="0 0 0 0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderBrush" Value="#FFC5C5C5"/>
            <Setter Property="BorderThickness" Value="1 1 1 1"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="ExpandableContentControlStyle" Value="{StaticResource expanderContentControlStyle}"/>
            <Setter Property="AccordionButtonStyle" Value="{StaticResource accordionButtonStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type syncfusion:SfAccordionItem}">

                        <Border x:Name="Background" 
                  Background="{TemplateBinding Background}"
			      BorderBrush="{TemplateBinding BorderBrush}" 
			      BorderThickness="{TemplateBinding BorderThickness}" >
                            <VisualStateManager.VisualStateGroups>
                                <!-- CommonState -->
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="MouseOver">

                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="AccentBrush" Storyboard.TargetName="ExpanderButton">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource AccentColorBrush2}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>

                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <!-- FocusStates -->
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused" />
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                                <!-- ExpansionStates -->
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                      BeginTime="00:00:00" Duration="00:00:01"                    
                      Storyboard.TargetName="ExpandSite"
                      Storyboard.TargetProperty="(syncfusion:ExpandableContentControl.Percentage)">
                                                <SplineDoubleKeyFrame KeySpline="0.2,0,0,1" KeyTime="00:00:0.3" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                      BeginTime="00:00:00" Duration="00:00:01"                   
                      Storyboard.TargetName="ExpandSite"
                      Storyboard.TargetProperty="(syncfusion:ExpandableContentControl.Percentage)">
                                                <SplineDoubleKeyFrame KeySpline="0.2,0,0,1" KeyTime="00:00:0.3" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <!-- ExpansionStates -->
                                <VisualStateGroup x:Name="LockedStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Locked">
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unlocked">
                                        <Storyboard>
                                            <BooleanAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="IsEnabled">
                                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" x:Name="rd0"/>
                                    <RowDefinition Height="*" x:Name="rd1"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" x:Name="cd0"/>
                                    <ColumnDefinition Width="Auto" x:Name="cd1"/>
                                </Grid.ColumnDefinitions>

                                <syncfusion:AccordionButton
					          x:Name="ExpanderButton"
                                    AccentBrush="{Binding AccentBrush,RelativeSource={RelativeSource TemplatedParent}}" 
                    Style="{TemplateBinding AccordionButtonStyle}"
					          Content="{TemplateBinding Header}"
					          ContentTemplate="{TemplateBinding HeaderTemplate}"
					          IsChecked="{TemplateBinding IsSelected}"
					          IsTabStop="True"
					          Grid.Row="0"
					          FontFamily="{TemplateBinding FontFamily}"
					          FontSize="{TemplateBinding FontSize}"
					          FontStretch="{TemplateBinding FontStretch}"
					          FontStyle="{TemplateBinding FontStyle}"
					          FontWeight="{TemplateBinding FontWeight}"
					          Foreground="{TemplateBinding Foreground}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                    Background="{TemplateBinding Background}" />
                                <syncfusion:ExpandableContentControl
					          x:Name="ExpandSite"
					          Grid.Row="1"
					          IsTabStop="False"
					          Percentage="0"
					          Content="{TemplateBinding Content}"
					          ContentTemplate="{TemplateBinding ContentTemplate}"
					          Margin="0 0 0 0"
                              Style="{TemplateBinding ExpandableContentControlStyle}"
					          FontFamily="{TemplateBinding FontFamily}"
					          FontSize="{TemplateBinding FontSize}"
					          FontStretch="{TemplateBinding FontStretch}"
					          FontStyle="{TemplateBinding FontStyle}"
					          FontWeight="{TemplateBinding FontWeight}"
					          Foreground="{TemplateBinding Foreground}"
					          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
					          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
					          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
					          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Grid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>


    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>

            <!--
            <Button Name="button" Click="OpenAChildWindow_OnButtonClick">
                <DockPanel LastChildFill="True">
                    <Rectangle DockPanel.Dock="Left" Width="12" Height="12" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" >
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_cog}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Name="b1tb1" VerticalAlignment="Center" Padding="5"
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                       FontSize="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=FontSize}"
                                       >
                                        Settings
                    </TextBlock>

                </DockPanel>
            </Button>
-->
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        
        <Controls:MetroAnimatedSingleRowTabControl Background="Transparent" Visibility="Visible" x:Name="metroAnimatedTabControl" Grid.ColumnSpan="2" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" >

            
            <TabItem Header=" Edit XMB" Padding="0">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                          <!--  <Rectangle DockPanel.Dock="Left" Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" >
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{iconPacks:Modern Kind=Box}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>-->
            <Label Padding="5,5,12,5"  
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.IsSharedSizeScope="True"
                                       >
                Edit XMB
            </Label>

            </DockPanel>
            </DataTemplate>
            </TabItem.HeaderTemplate>

            <Grid Visibility="Visible" Margin="0,15,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border BorderThickness="0,0,1,0">
                    <UniformGrid Columns="1" VerticalAlignment="Top" Margin="0">

                        <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Center">

                            <Grid>

                                <!-- Rounded mask (stretches to fill Grid) -->
                                <Border Name="mask" Background="{DynamicResource WhiteBrush}" CornerRadius="7"/>

                                <!-- Main content container -->
                                <StackPanel>

                                    <!-- Use a VisualBrush of 'mask' as the opacity mask -->
                                    <StackPanel.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=mask}"/>
                                    </StackPanel.OpacityMask>

                                    <Button x:Name="button_1" Height="{Binding ElementName=mask}" Style="{StaticResource AccentedSquareButtonStyle}" Click="button_1_Click" Margin="0" mah:ControlsHelper.ContentCharacterCasing="Normal" Padding="5,0" BorderThickness="0"  >
                                        <DockPanel LastChildFill="True">
                                            <!-- <Rectangle DockPanel.Dock="Left" Width="12" Height="12" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" >
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource ThemeLightDark}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>-->
                                            <TextBlock VerticalAlignment="Center"
                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                    FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                       ><Run Text="Save"/></TextBlock>

                                        </DockPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>


                        </Border>

                        <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Center">

                            <Grid>

                                <!-- Main content container -->
                                <StackPanel>

                                    <!-- Use a VisualBrush of 'mask' as the opacity mask -->
                                    <StackPanel.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=mask}"/>
                                    </StackPanel.OpacityMask>

                                    <Button x:Name="button_2" Height="{Binding ElementName=mask}" Style="{StaticResource AccentedSquareButtonStyle}" Click="button_1_Click" Margin="0" mah:ControlsHelper.ContentCharacterCasing="Normal" Padding="5,0" BorderThickness="0"  >
                                        <DockPanel LastChildFill="True">
                                            <!-- <Rectangle DockPanel.Dock="Left" Width="12" Height="12" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" >
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource ThemeLightDark}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>-->
                                            <TextBlock VerticalAlignment="Center"
                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                    FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                       ><Run Text="Upload to PS3"/></TextBlock>

                                        </DockPanel>
                                    </Button>



                                </StackPanel>
                            </Grid>


                        </Border>

                        <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Center">

                            <Grid>
                                <!-- Main content container -->
                                <StackPanel>

                                    <!-- Use a VisualBrush of 'mask' as the opacity mask -->
                                    <StackPanel.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=mask}"/>
                                    </StackPanel.OpacityMask>

                                    <Button x:Name="button_3" Height="{Binding ElementName=mask}" Style="{StaticResource AccentedSquareButtonStyle}" Click="button_1_Click" Margin="0" mah:ControlsHelper.ContentCharacterCasing="Normal" Padding="5,0" BorderThickness="0"  >
                                        <DockPanel LastChildFill="True">
                                            <!-- <Rectangle DockPanel.Dock="Left" Width="12" Height="12" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" >
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource ThemeLightDark}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>-->
                                            <TextBlock VerticalAlignment="Center"
                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                    FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                       ><Run Text="Load New XML"/></TextBlock>

                                        </DockPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>


                        </Border>

                        <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Center">

                            <Grid>
                                <!-- Main content container -->
                                <StackPanel>

                                    <!-- Use a VisualBrush of 'mask' as the opacity mask -->
                                    <StackPanel.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=mask}"/>
                                    </StackPanel.OpacityMask>

                                    <Button x:Name="button_4" Height="{Binding ElementName=mask}" Style="{StaticResource AccentedSquareButtonStyle}" Click="button_4_Click"  Margin="0" mah:ControlsHelper.ContentCharacterCasing="Normal" Padding="5,0" BorderThickness="0"  >
                                        <DockPanel LastChildFill="True">
                                            <!-- <Rectangle DockPanel.Dock="Left" Width="12" Height="12" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" >
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource ThemeLightDark}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>-->
                                            <TextBlock VerticalAlignment="Center"
                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                    FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                       ><Run Text="Reset XML"/></TextBlock>

                                        </DockPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>


                        </Border>

                        <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Center">

                            <Grid>
                                <!-- Main content container -->
                                <StackPanel>

                                    <!-- Use a VisualBrush of 'mask' as the opacity mask -->
                                    <StackPanel.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=mask}"/>
                                    </StackPanel.OpacityMask>

                                    <Button x:Name="button_5" Height="{Binding ElementName=mask}" Style="{StaticResource AccentedSquareButtonStyle}" Click="OpenEditorWindow_OnButtonClick"  Margin="0" mah:ControlsHelper.ContentCharacterCasing="Normal" Padding="5,0" BorderThickness="0"  >
                                        <DockPanel LastChildFill="True">
                                            <!-- <Rectangle DockPanel.Dock="Left" Width="12" Height="12" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" >
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource ThemeLightDark}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>-->
                                            <TextBlock VerticalAlignment="Center"
                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                    FontSize="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                       ><Run Text="Edit XML"/></TextBlock>

                                        </DockPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>


                        </Border>


                    </UniformGrid>
                </Border>

                <UniformGrid Rows="1" Grid.Column="1" Margin="10,0,0,0">

                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Top">
                        <Grid>
                            <!-- Rounded mask (stretches to fill Grid) -->
                            <Border Name="mask2" Background="{DynamicResource WhiteBrush}" CornerRadius="25"/>

                            <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Background="{DynamicResource AccentColorBrush}" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

                                <local:ClickableLabel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask2}"/>
                                </local:ClickableLabel.OpacityMask>

                                <StackPanel  x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <!-- Use a VisualBrush of 'mask' as the opacity mask -->

                                    <Image  Height="30" Source="Files/icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Label  Name="clb1l" Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                </StackPanel>

                            </local:ClickableLabel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Top">


                        <Grid>
                            <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

                                <local:ClickableLabel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask2}"/>
                                </local:ClickableLabel.OpacityMask>
                                <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <Image Height="30"  Width="30"  Source="Files/icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <Label Name="clb2l" Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                </StackPanel>
                            </local:ClickableLabel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Top">


                        <Grid>
                            <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

                                <local:ClickableLabel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask2}"/>
                                </local:ClickableLabel.OpacityMask>
                                <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <Image Height="30"  Width="30" Source="Files/icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <Label Name="clb3l" Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                </StackPanel>
                            </local:ClickableLabel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Top">


                        <Grid>
                            <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

                                <local:ClickableLabel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask2}"/>
                                </local:ClickableLabel.OpacityMask>
                                <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <Image Height="30"  Width="30" Source="Files/icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <Label Name="clb4l" Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                </StackPanel>
                            </local:ClickableLabel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Top">


                        <Grid>
                            <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

                                <local:ClickableLabel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask2}"/>
                                </local:ClickableLabel.OpacityMask>
                                <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <Image Height="30" Source="Files/icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Label Name="clb5l" Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                </StackPanel>
                            </local:ClickableLabel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Top">


                        <Grid>
                            <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

                                <local:ClickableLabel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask2}"/>
                                </local:ClickableLabel.OpacityMask>
                                <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <Image Height="30"  Width="30"  Source="Files/icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <Label Name="clb6l" Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                </StackPanel>
                            </local:ClickableLabel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Top">


                        <Grid>
                            <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

                                <local:ClickableLabel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask2}"/>
                                </local:ClickableLabel.OpacityMask>
                                <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <Image Height="30"  Width="30" Source="Files/icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <Label Name="clb7l" Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                </StackPanel>
                            </local:ClickableLabel>
                        </Grid>
                    </Border>

                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" VerticalAlignment="Top">


                        <Grid>
                            <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">

                                <local:ClickableLabel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=mask2}"/>
                                </local:ClickableLabel.OpacityMask>
                                <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <Image Height="30"  Width="30" Source="Files/icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <Label Name="clb8l" Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                </StackPanel>
                            </local:ClickableLabel>
                        </Grid>
                    </Border>

                    <!--
                            <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click" MouseEnter="clb1_MouseEnter" MouseLeave="clb1_MouseLeave" Height="62" VerticalAlignment="Top" VerticalContentAlignment="Center" HorizontalContentAlignment="Center">
                                <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Width="45">
                                    <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                    <Label Name="clb9l" Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                </StackPanel>
                            </local:ClickableLabel>
                            -->
                </UniformGrid>

                <Controls:FlipView Name="XMBfv" Grid.Column="1" IsBannerEnabled="False" SelectionChanged="FlipView_SelectionChanged" LeftTransition="Left" RightTransition="Right" IsNavigationEnabled="False" MouseHoverBorderEnabled="False" MouseOverGlowEnabled="False" Margin="0,10,0,0">

                    <Controls:FlipViewItem Name="user">

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="60" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <!-- <Border Grid.Row="0" BorderThickness="0"  BorderBrush="{DynamicResource AccentColorBrush}">
                                <Grid>
                                    <UniformGrid Rows="1">

                                        <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click">
                                            <StackPanel Background="{DynamicResource AccentColorBrush4}" x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>

                                    </UniformGrid>
                                </Grid>
                            </Border>-->
                            <!--<Border Grid.Row="1" BorderThickness="0">

                                <ListBox Name="lbtest"  SelectionChanged="lbtest_SelectionChanged" Width="250" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="45,0,0,0" >

                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <Border>
                                                <local:ClickableLabel Click="ClickableLabel_Click">
                                                    <StackPanel x:Name="plist"  ToolTip="{Binding tool }" HorizontalAlignment="Right" Margin="0,5">


                                                        <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Path=id, Mode=TwoWay}" FontSize="12" Name="txtScrolling" HorizontalAlignment="Stretch"  />

                                                    </StackPanel>
                                                </local:ClickableLabel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>-->
                            <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">
                                <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="0,0,5,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Left">
                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--<syncfusion:SfAccordion.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <TextBlock Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </syncfusion:SfAccordion.HeaderTemplate>-->
                                                    <!-- -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">

                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                </ListBox>
                            </Border>

                            <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">

                                <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="45,0,45,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value="0.5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate>
                                        <DataTemplate>

<!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                            <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                           <!--     <syncfusion:SfAccordion.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                                <TextBlock   Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </syncfusion:SfAccordion.HeaderTemplate>
                                                 -->
                                                
                                                <syncfusion:SfAccordionItem BorderThickness="0">
                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                    <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                        <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                            <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                        </StackPanel>

                                                    </local:ClickableLabel>


                                                </syncfusion:SfAccordionItem>
                                            </syncfusion:SfAccordion>


                                            <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>


                        </Grid>
                    </Controls:FlipViewItem>

                    <Controls:FlipViewItem Name="Photo">

                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!-- <Border Grid.Row="0" BorderThickness="0"  BorderBrush="{DynamicResource AccentColorBrush}">
                                <Grid>
                                    <UniformGrid Rows="1">

                                        <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click">
                                            <StackPanel Background="{DynamicResource AccentColorBrush4}" x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>

                                    </UniformGrid>
                                </Grid>
                            </Border>-->
                                <!--<Border Grid.Row="1" BorderThickness="0">

                                <ListBox Name="lbtest"  SelectionChanged="lbtest_SelectionChanged" Width="250" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="45,0,0,0" >

                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <Border>
                                                <local:ClickableLabel Click="ClickableLabel_Click">
                                                    <StackPanel x:Name="plist"  ToolTip="{Binding tool }" HorizontalAlignment="Right" Margin="0,5">


                                                        <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Path=id, Mode=TwoWay}" FontSize="12" Name="txtScrolling" HorizontalAlignment="Stretch"  />

                                                    </StackPanel>
                                                </local:ClickableLabel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>-->
                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">
                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="0,0,5,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Left">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value=".5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0.5" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--<syncfusion:SfAccordion.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <TextBlock Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </syncfusion:SfAccordion.HeaderTemplate>-->
                                                    <!-- -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">

                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>

                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">

                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="45,0,45,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0.5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--     <syncfusion:SfAccordion.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                                <TextBlock   Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </syncfusion:SfAccordion.HeaderTemplate>
                                                 -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">
                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </Border>


                            </Grid>
                        </Controls:FlipViewItem>

                    <Controls:FlipViewItem Name="music">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!-- <Border Grid.Row="0" BorderThickness="0"  BorderBrush="{DynamicResource AccentColorBrush}">
                                <Grid>
                                    <UniformGrid Rows="1">

                                        <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click">
                                            <StackPanel Background="{DynamicResource AccentColorBrush4}" x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>

                                    </UniformGrid>
                                </Grid>
                            </Border>-->
                                <!--<Border Grid.Row="1" BorderThickness="0">

                                <ListBox Name="lbtest"  SelectionChanged="lbtest_SelectionChanged" Width="250" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="45,0,0,0" >

                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <Border>
                                                <local:ClickableLabel Click="ClickableLabel_Click">
                                                    <StackPanel x:Name="plist"  ToolTip="{Binding tool }" HorizontalAlignment="Right" Margin="0,5">


                                                        <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Path=id, Mode=TwoWay}" FontSize="12" Name="txtScrolling" HorizontalAlignment="Stretch"  />

                                                    </StackPanel>
                                                </local:ClickableLabel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>-->
                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">
                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="0,0,5,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Left">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value=".5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0.5" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--<syncfusion:SfAccordion.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <TextBlock Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </syncfusion:SfAccordion.HeaderTemplate>-->
                                                    <!-- -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">

                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>

                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">

                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="45,0,45,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0.5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--     <syncfusion:SfAccordion.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                                <TextBlock   Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </syncfusion:SfAccordion.HeaderTemplate>
                                                 -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">
                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </Border>


                            </Grid>
                        </Controls:FlipViewItem>

                    <Controls:FlipViewItem Name="video">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!-- <Border Grid.Row="0" BorderThickness="0"  BorderBrush="{DynamicResource AccentColorBrush}">
                                <Grid>
                                    <UniformGrid Rows="1">

                                        <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click">
                                            <StackPanel Background="{DynamicResource AccentColorBrush4}" x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>

                                    </UniformGrid>
                                </Grid>
                            </Border>-->
                                <!--<Border Grid.Row="1" BorderThickness="0">

                                <ListBox Name="lbtest"  SelectionChanged="lbtest_SelectionChanged" Width="250" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="45,0,0,0" >

                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <Border>
                                                <local:ClickableLabel Click="ClickableLabel_Click">
                                                    <StackPanel x:Name="plist"  ToolTip="{Binding tool }" HorizontalAlignment="Right" Margin="0,5">


                                                        <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Path=id, Mode=TwoWay}" FontSize="12" Name="txtScrolling" HorizontalAlignment="Stretch"  />

                                                    </StackPanel>
                                                </local:ClickableLabel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>-->
                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">
                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="0,0,5,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Left">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value=".5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0.5" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--<syncfusion:SfAccordion.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <TextBlock Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </syncfusion:SfAccordion.HeaderTemplate>-->
                                                    <!-- -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">

                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>

                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">

                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="45,0,45,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0.5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--     <syncfusion:SfAccordion.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                                <TextBlock   Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </syncfusion:SfAccordion.HeaderTemplate>
                                                 -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">
                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </Border>


                            </Grid>
                        </Controls:FlipViewItem>

                    <Controls:FlipViewItem Name="TV">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!-- <Border Grid.Row="0" BorderThickness="0"  BorderBrush="{DynamicResource AccentColorBrush}">
                                <Grid>
                                    <UniformGrid Rows="1">

                                        <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click">
                                            <StackPanel Background="{DynamicResource AccentColorBrush4}" x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>

                                    </UniformGrid>
                                </Grid>
                            </Border>-->
                                <!--<Border Grid.Row="1" BorderThickness="0">

                                <ListBox Name="lbtest"  SelectionChanged="lbtest_SelectionChanged" Width="250" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="45,0,0,0" >

                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <Border>
                                                <local:ClickableLabel Click="ClickableLabel_Click">
                                                    <StackPanel x:Name="plist"  ToolTip="{Binding tool }" HorizontalAlignment="Right" Margin="0,5">


                                                        <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Path=id, Mode=TwoWay}" FontSize="12" Name="txtScrolling" HorizontalAlignment="Stretch"  />

                                                    </StackPanel>
                                                </local:ClickableLabel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>-->
                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">
                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="0,0,5,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Left">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value=".5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0.5" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--<syncfusion:SfAccordion.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <TextBlock Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </syncfusion:SfAccordion.HeaderTemplate>-->
                                                    <!-- -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">

                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>

                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">

                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="45,0,45,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0.5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--     <syncfusion:SfAccordion.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                                <TextBlock   Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </syncfusion:SfAccordion.HeaderTemplate>
                                                 -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">
                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </Border>


                            </Grid>
                        </Controls:FlipViewItem>

                    <Controls:FlipViewItem Name="Game">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!-- <Border Grid.Row="0" BorderThickness="0"  BorderBrush="{DynamicResource AccentColorBrush}">
                                <Grid>
                                    <UniformGrid Rows="1">

                                        <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click">
                                            <StackPanel Background="{DynamicResource AccentColorBrush4}" x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>

                                    </UniformGrid>
                                </Grid>
                            </Border>-->
                                <!--<Border Grid.Row="1" BorderThickness="0">

                                <ListBox Name="lbtest"  SelectionChanged="lbtest_SelectionChanged" Width="250" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="45,0,0,0" >

                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <Border>
                                                <local:ClickableLabel Click="ClickableLabel_Click">
                                                    <StackPanel x:Name="plist"  ToolTip="{Binding tool }" HorizontalAlignment="Right" Margin="0,5">


                                                        <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Path=id, Mode=TwoWay}" FontSize="12" Name="txtScrolling" HorizontalAlignment="Stretch"  />

                                                    </StackPanel>
                                                </local:ClickableLabel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>-->
                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">
                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="0,0,5,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Left">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value=".5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0.5" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--<syncfusion:SfAccordion.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <TextBlock Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </syncfusion:SfAccordion.HeaderTemplate>-->
                                                    <!-- -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">

                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>

                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">

                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="45,0,45,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0.5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--     <syncfusion:SfAccordion.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                                <TextBlock   Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </syncfusion:SfAccordion.HeaderTemplate>
                                                 -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">
                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </Border>


                            </Grid>
                        </Controls:FlipViewItem>

                    <Controls:FlipViewItem Name="Network">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!-- <Border Grid.Row="0" BorderThickness="0"  BorderBrush="{DynamicResource AccentColorBrush}">
                                <Grid>
                                    <UniformGrid Rows="1">

                                        <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click">
                                            <StackPanel Background="{DynamicResource AccentColorBrush4}" x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>

                                    </UniformGrid>
                                </Grid>
                            </Border>-->
                                <!--<Border Grid.Row="1" BorderThickness="0">

                                <ListBox Name="lbtest"  SelectionChanged="lbtest_SelectionChanged" Width="250" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="45,0,0,0" >

                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <Border>
                                                <local:ClickableLabel Click="ClickableLabel_Click">
                                                    <StackPanel x:Name="plist"  ToolTip="{Binding tool }" HorizontalAlignment="Right" Margin="0,5">


                                                        <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Path=id, Mode=TwoWay}" FontSize="12" Name="txtScrolling" HorizontalAlignment="Stretch"  />

                                                    </StackPanel>
                                                </local:ClickableLabel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>-->
                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">
                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="0,0,5,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Left">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value=".5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0.5" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--<syncfusion:SfAccordion.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <TextBlock Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </syncfusion:SfAccordion.HeaderTemplate>-->
                                                    <!-- -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">

                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>

                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">

                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="45,0,45,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0.5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--     <syncfusion:SfAccordion.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                                <TextBlock   Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </syncfusion:SfAccordion.HeaderTemplate>
                                                 -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">
                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </Border>


                            </Grid>
                        </Controls:FlipViewItem>

                    <Controls:FlipViewItem Name="PSN">
                            <Grid>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="60" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!-- <Border Grid.Row="0" BorderThickness="0"  BorderBrush="{DynamicResource AccentColorBrush}">
                                <Grid>
                                    <UniformGrid Rows="1">

                                        <local:ClickableLabel x:Name="clb1" Click="ClickableLabel_Click">
                                            <StackPanel Background="{DynamicResource AccentColorBrush4}" x:Name="userlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_users.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="User" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource BlackBrush}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb2" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Photolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_photo.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Photo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb3" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="musiclist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_music.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Music" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb4" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="videolist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_video.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Video" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb5" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="tvlist" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30" Source="icons/LIcon_category_tv.png" Width="30" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                <Label Content="TV" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb6" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Gamelist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30"  Source="icons/LIcon_category_game.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Game" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb7" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Networklist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_network.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Network" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb8" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="psnlist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_psn.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="PSN" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>
                                        <local:ClickableLabel x:Name="clb9" Click="ClickableLabel_Click">
                                            <StackPanel x:Name="Friendslist"  HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding tool }" Margin="25,0,0,0" Width="45">
                                                <Image Height="30"  Width="30" Source="icons/LIcon_category_friends.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"/>
                                                <Label Content="Friends" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource GrayBrush7}" Padding="0" FontSize="12" Margin="0,0,0,0"/>
                                            </StackPanel>
                                        </local:ClickableLabel>

                                    </UniformGrid>
                                </Grid>
                            </Border>-->
                                <!--<Border Grid.Row="1" BorderThickness="0">

                                <ListBox Name="lbtest"  SelectionChanged="lbtest_SelectionChanged" Width="250" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="45,0,0,0" >

                                    <ListBox.ItemContainerStyle>

                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value=".5" />

                                            <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                            <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                            <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Margin" Value="0,0.5" />
                                            <Setter Property="MinHeight" Value="25" />
                                            <Setter Property="SnapsToDevicePixels" Value="True" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                            <Grid>
                                                                <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                            </Grid>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                            </Trigger>

                                                            <Trigger Property="IsSelected" Value="True">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                            </MultiTrigger>

                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver" Value="True" />
                                                                    <Condition Property="IsSelected" Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                            </MultiTrigger>

                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                            </Trigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsEnabled" Value="False" />
                                                                    <Condition Property="IsSelected" Value="True" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                        </Style>
                                    </ListBox.ItemContainerStyle>


                                    <ListBox.ItemTemplate >
                                        <DataTemplate>
                                            <Border>
                                                <local:ClickableLabel Click="ClickableLabel_Click">
                                                    <StackPanel x:Name="plist"  ToolTip="{Binding tool }" HorizontalAlignment="Right" Margin="0,5">


                                                        <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Path=id, Mode=TwoWay}" FontSize="12" Name="txtScrolling" HorizontalAlignment="Stretch"  />

                                                    </StackPanel>
                                                </local:ClickableLabel>
                                            </Border>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>

                            </Border>-->
                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">
                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="0,0,5,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Left">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value=".5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0.5" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--<syncfusion:SfAccordion.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid >
                                                                <TextBlock Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </syncfusion:SfAccordion.HeaderTemplate>-->
                                                    <!-- -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">

                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Border>

                                <Border Grid.Row="1" BorderThickness="0" Padding="5,0,5,0">

                                    <ListBox Width="250" SelectionChanged="lbtest_SelectionChanged"  MouseDoubleClick="ClickableLabel_MouseDoubleClick" SelectionMode="Extended" ItemsSource="{Binding MSPCollection}"
                 dd:DragDrop.IsDragSource="True" Margin="45,0,45,0" dd:DragDrop.IsDropTarget="True" HorizontalAlignment="Right" VerticalContentAlignment="Stretch">
                                        <ListBox.ItemContainerStyle>

                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="0.5" />

                                                <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}"/>
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.ActiveSelectionForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledForegroundBrush" Value="{DynamicResource GrayNormalBrush}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedBackgroundBrush" Value="{DynamicResource GrayBrush7}" />
                                                <Setter Property="Controls:ItemHelper.DisabledSelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.HoverBackgroundBrush" Value="{DynamicResource AccentColorBrush3}" />
                                                <Setter Property="Controls:ItemHelper.HoverSelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Controls:ItemHelper.SelectedBackgroundBrush" Value="{DynamicResource AccentColorBrush2}" />
                                                <Setter Property="Controls:ItemHelper.SelectedForegroundBrush" Value="{DynamicResource AccentSelectedColorBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0,0" />
                                                <Setter Property="MinHeight" Value="25" />
                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Border"
                                               Background="Transparent"
                                               BorderBrush="{TemplateBinding  BorderBrush}"
                                               BorderThickness="{TemplateBinding BorderThickness}"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                                                <Grid>
                                                                    <GridViewRowPresenter x:Name="PART_RowPresenter"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                    <ContentPresenter x:Name="PART_ContentPresenter"
                                              
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                    <Setter TargetName="PART_ContentPresenter" Property="Visibility" Value="Visible" />
                                                                    <Setter TargetName="PART_RowPresenter" Property="Visibility" Value="Collapsed" />
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                                                                </MultiTrigger>

                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsSelected" Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                                                </MultiTrigger>

                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsEnabled" Value="False" />
                                                                        <Condition Property="IsSelected" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                                                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource GrayBrush7}" />
                                                                    </MultiTrigger.Setters>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                            </Style>
                                        </ListBox.ItemContainerStyle>


                                        <ListBox.ItemTemplate>
                                            <DataTemplate>

                                                <!-- AccentBrush="{DynamicResource AccentColorBrush}"-->
                                                <syncfusion:SfAccordion SelectionMode="ZeroOrOne" BorderBrush="Transparent" AccentBrush="{DynamicResource AccentColorBrush}" VerticalAlignment="Stretch" MinHeight="20" MinWidth="20" ItemContainerStyle="{StaticResource Accordionitems}" >
                                                    <!--     <syncfusion:SfAccordion.HeaderTemplate>
                                                    <DataTemplate>
                                                        <Grid >
                                                                <TextBlock   Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </syncfusion:SfAccordion.HeaderTemplate>
                                                 -->

                                                    <syncfusion:SfAccordionItem BorderThickness="0">
                                                        <syncfusion:SfAccordionItem.Header>
                                                            <TextBlock  Text="{Binding EasyName1}" MinHeight="26"  Foreground="{DynamicResource TextBrush}" />

                                                        </syncfusion:SfAccordionItem.Header>

                                                        <local:ClickableLabel  MouseDoubleClick="ClickableLabel_MouseDoubleClick" Click="ClickableLabel_Click_2">


                                                            <StackPanel HorizontalAlignment="Right" Margin="0,5" >

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name2}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                                <TextBlock Width="182" TextWrapping="Wrap" Text="{Binding Name3}" FontSize="12" HorizontalAlignment="Stretch"  />

                                                            </StackPanel>

                                                        </local:ClickableLabel>


                                                    </syncfusion:SfAccordionItem>
                                                </syncfusion:SfAccordion>


                                                <!--<Grid Background="Transparent" Width="182">
                                    <TextBlock Text="{Binding Name}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" FontSize="12"/>
                                </Grid>-->
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                </Border>


                            </Grid>
                        </Controls:FlipViewItem>


                </Controls:FlipView>

            </Grid>
            </TabItem>

            <TabItem Header="Wave" Padding="0">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                            <!--  <Rectangle DockPanel.Dock="Left" Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" >
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{iconPacks:Modern Kind=Box}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>-->
                            <Label Padding="5,5,12,5"  
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.IsSharedSizeScope="True"
                                       >
                                WAVE
                            </Label>

                        </DockPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>
                <Grid>
                    
                    
                </Grid>
            </TabItem>

            <TabItem Header="Boot Logo" Padding="0">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">

                            <Label Padding="5,5,12,5"  
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.IsSharedSizeScope="True"
                                       >
                                BOOT LOGO
                            </Label>

                        </DockPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>

                <Grid>

                </Grid>
            </TabItem>

            <TabItem Header="Boot Sound" Padding="0">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                            <Label Padding="5,5,12,5"  
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.IsSharedSizeScope="True"
                                       >
                                BOOT SOUND
                            </Label>

                        </DockPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>

                <Grid Visibility="Visible">
                   
                </Grid>
            </TabItem>

            <TabItem Header="EPILEPSY WARNING" Padding="0">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                            <!--  <Rectangle DockPanel.Dock="Left" Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" >
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{iconPacks:Modern Kind=Box}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>-->
                            <Label Padding="5,5,12,5"  
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.IsSharedSizeScope="True"
                                       >
                                EPILEPSY WARNING
                            </Label>

                        </DockPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>

                <Grid Visibility="Visible">

                </Grid>
            </TabItem>

            <TabItem Header="Other" Padding="0">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                            <!--  <Rectangle DockPanel.Dock="Left" Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" >
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{iconPacks:Modern Kind=Box}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>-->
                            <Label Padding="5,5,12,5"  
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.IsSharedSizeScope="True"
                                       >
                                OTHER
                            </Label>

                        </DockPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>

                <Controls:MetroAnimatedSingleRowTabControl Background="Transparent" Visibility="Visible" x:Name="settingsTabControl" HorizontalContentAlignment="Right">


                    <TabItem Header="Other Settings" mah:ControlsHelper.HeaderFontSize="20" >
                        <TabItem.HeaderTemplate>
                            <DataTemplate>
                                <DockPanel LastChildFill="True">
                                    <!--<Rectangle DockPanel.Dock="Left" Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" >
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{iconPacks:Material Kind=ShapeOutline}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle> -->
                                    <Label Padding="5"
                                       Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"
                                       FontSize="12" VerticalAlignment="Center" Content="Other Settings"
                                       />
                                </DockPanel>
                            </DataTemplate>
                        </TabItem.HeaderTemplate>
                        <Grid>

                        </Grid>
                    </TabItem>
                    
                    <TabItem Header="Theme Settings" mah:ControlsHelper.HeaderFontSize="20" >
                        <TabItem.HeaderTemplate>
                            <DataTemplate>
                                <DockPanel LastChildFill="True">
                                    <!--<Rectangle DockPanel.Dock="Left" Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" >
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{iconPacks:Material Kind=ShapeOutline}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>-->
                                    <Label Padding="5" 
                                       Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"
                                       FontSize="12" VerticalAlignment="Center" Content="Theme Settings"
                                       />
                                </DockPanel>
                            </DataTemplate>
                        </TabItem.HeaderTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="220"/>
                            </Grid.ColumnDefinitions>
                            <Border Visibility="Collapsed" BorderThickness="1,1,0,1" BorderBrush="{DynamicResource AccentColorBrush}"  HorizontalAlignment="Left"  Margin="50,10,0,10" Width="175" Height="300" VerticalAlignment="Bottom">
                                <StackPanel>
                                    <Label  Foreground="{DynamicResource AccentColorBrush}" HorizontalAlignment="Center" FontSize="20" VerticalAlignment="Top">

                                        <DockPanel LastChildFill="True">
                                            <!--<Rectangle DockPanel.Dock="Left" Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" >
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{iconPacks:Material Kind=Palette}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle> -->
                                            <Label Padding="5"
                                       Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"
                                       FontSize="{Binding (TextElement.FontSize), RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"
                                       Content="Accent Color"
                                       />
                                        </DockPanel>

                                    </Label>
                                    <ListBox  Background="Transparent" FontSize="20" x:Name="listBox1" VerticalAlignment="Top" SelectionChanged="ListBoxItem_Selected" Padding="0" HorizontalContentAlignment="Center" Margin="0" Height="250">
                                        <ListBoxItem Content="Red" Foreground="Red"  Background="Transparent"/>
                                        <ListBoxItem Content="Green" Foreground="Green" Background="Transparent" />
                                        <ListBoxItem Content="Blue" Foreground="Blue" Background="Transparent" />
                                        <ListBoxItem Content="Purple" Foreground="Purple" Background="Transparent" />
                                        <ListBoxItem Content="Orange" Foreground="Orange" Background="Transparent" />
                                        <ListBoxItem Content="Lime" Foreground="Lime" Background="Transparent" />
                                        <ListBoxItem Content="Emerald" Foreground="#FF077517" Background="Transparent" />
                                        <ListBoxItem Content="Teal" Foreground="Teal" Background="Transparent" />
                                        <ListBoxItem Content="Cyan" Foreground="Cyan" Background="Transparent" />
                                        <ListBoxItem Content="Cobalt" Foreground="#FF0747C6" Background="Transparent" />
                                        <ListBoxItem Content="Indigo" Foreground="Indigo" Background="Transparent" />
                                        <ListBoxItem Content="Violet" Foreground="Violet" Background="Transparent" />
                                        <ListBoxItem Content="Pink" Foreground="Pink" Background="Transparent" />
                                        <ListBoxItem Content="Magenta" Foreground="Magenta" Background="Transparent" />
                                        <ListBoxItem Content="Crimson" Foreground="Crimson" Background="Transparent" />
                                        <ListBoxItem Content="Amber" Foreground="#FFC7890F" Background="Transparent" />
                                        <ListBoxItem Content="Yellow" Foreground="Yellow" Background="Transparent" />
                                        <ListBoxItem Content="Brown" Foreground="Brown" Background="Transparent" />
                                        <ListBoxItem Content="Olive" Foreground="Olive" Background="Transparent" />
                                        <ListBoxItem Content="Steel" Foreground="#FF576573" Background="Transparent" />
                                        <ListBoxItem Content="Mauve" Foreground="#FF655475" Background="Transparent" />
                                        <ListBoxItem Content="Taupe" Foreground="#FF736845" Background="Transparent" />
                                        <ListBoxItem Content="Sienna" Foreground="Sienna" Background="Transparent" />
                                    </ListBox>
                                </StackPanel>
                            </Border>

                            <Border Visibility="Visible" Grid.Column="1" BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}" Width="auto" Height="auto" Margin="0">
                                <StackPanel Margin="0">
                                    <Label  Foreground="{DynamicResource AccentColorBrush}" HorizontalAlignment="Center" FontSize="20" VerticalAlignment="Top" >

                                        <DockPanel LastChildFill="True">
                                           <!-- <Rectangle DockPanel.Dock="Left" Width="20" Height="20" Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" >
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Fill" Visual="{iconPacks:Material Kind=FormatColorFill}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle> -->
                                            <Label Padding="5"
                                       Foreground="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"
                                       FontSize="{Binding (TextElement.FontSize), RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}}"
                                       Content="Background Color"
                                       />
                                        </DockPanel>

                                    </Label>

                                    <Border BorderThickness="1" BorderBrush="Transparent" CornerRadius="10" Padding="2" HorizontalAlignment="Center" Margin="5" Grid.Column="1" Grid.Row="1" VerticalAlignment="Bottom" >

                                        <Grid>
                                            <Border Background="{DynamicResource WhiteBrush}" CornerRadius="8"/>

                                            <!-- Rounded mask (stretches to fill Grid) -->
                                            <Border Name="mask3" Background="{DynamicResource WhiteBrush}" CornerRadius="7"/>

                                            <!-- Main content container -->
                                            <StackPanel>

                                                <!-- Use a VisualBrush of 'mask' as the opacity mask -->
                                                <StackPanel.OpacityMask>
                                                    <VisualBrush Visual="{Binding ElementName=mask3}"/>
                                                </StackPanel.OpacityMask>

                                                <Button Height="30" Style="{StaticResource AccentedSquareButtonStyle}" ToolTip="Change Theme" HorizontalAlignment="Center" Margin="0" Padding="0" BorderThickness="0" Name="button7" VerticalAlignment="Bottom" Width="120" Click="button7_Click" mah:ControlsHelper.ContentCharacterCasing="Normal" >
                                                    <DockPanel LastChildFill="True">
                                                        <!-- <Rectangle DockPanel.Dock="Left" Width="12" Height="12" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" >
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{StaticResource ThemeLightDark}" />
                                        </Rectangle.OpacityMask>
                                    </Rectangle>-->
                                                        <TextBlock Name="b7tb1" VerticalAlignment="Center" Padding="5"
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                       FontSize="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=FontSize}"
                                       >
                                        Light Theme
                                                        </TextBlock>

                                                    </DockPanel>
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </Border>

                                    <local:ClickableLabel Click="button7_Click" HorizontalAlignment="Center">
                                        <Grid Height="110" Width="175" Name="color2" Background="#FF252525">

                                            <!--<Image Stretch="Fill" Source="tools/resources/PS3GBS.png"/> -->

                                        </Grid>
                                    </local:ClickableLabel>





                                    



                                </StackPanel>

                            </Border>

                            <Border Grid.Column="0" BorderThickness="1,1,0,1" BorderBrush="{DynamicResource AccentColorBrush}">
                                <ScrollViewer>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <ItemsControl Grid.Row="0" Name="Color_Grid" ItemsSource="{Binding}" Margin="10" >
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Columns="3" Height="450"/>

                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>

                                                <DataTemplate>

                                                    <Controls:Tile Margin="0" Height="auto" FontSize="0.1" Foreground="{DynamicResource BlackColorBrush}" BorderThickness="0" BorderBrush="{DynamicResource AccentColorBrush3}" Name="TILE1" Title="{Binding name}" MouseEnter="MouseEnter2" MouseLeave="MouseEnter2" PreviewMouseLeftButtonUp="TILE1_PreviewMouseLeftButtonUp" Background="{Binding bg}" Width="Auto" VerticalContentAlignment="Center" HorizontalTitleAlignment="Center" VerticalTitleAlignment="Center" HorizontalContentAlignment="Left" >
                                                        <Grid >
                                                            <Rectangle VerticalAlignment="Center" Width="16" Height="16" Fill="{Binding fill}" Margin="25,0,0,0" HorizontalAlignment="Left" >
                                                               <!-- <Rectangle.OpacityMask>
                                                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_debug_stop}" AutoLayoutContent="True" />
                                                                </Rectangle.OpacityMask>--> 
                                                            </Rectangle>

                                                        </Grid>

                                                    </Controls:Tile>


                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Grid>
                                </ScrollViewer>

                            </Border>
                        </Grid>





                    </TabItem>


                </Controls:MetroAnimatedSingleRowTabControl>

            </TabItem>

            <!--<TabItem Header="FTP" Padding="0">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                           
                            <Label Padding="5,5,12,5"  
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContentPresenter}}, Path=(TextElement.Foreground)}" FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.IsSharedSizeScope="True"
                                       >
                                FTP
                            </Label>

                        </DockPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>

                <Grid Visibility="Visible">

                </Grid>
            </TabItem>
            -->

        </Controls:MetroAnimatedSingleRowTabControl>

        <StatusBar Name="SB1" Grid.Row="1" BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}" HorizontalContentAlignment="Stretch">
            <StatusBarItem Name="FVersion">
                <local:ClickableLabel Padding="0" x:Name="cfw_han_lable" Click="cfw_han_lable_Click" Content="CFW Mode" Cursor="Hand"/>


            </StatusBarItem>
            <!--<StatusBarItem Content="  " />
            <StatusBarItem HorizontalAlignment="Right" >Host:
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" >
                <TextBox Width="100"></TextBox>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" >Username:
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" >
                <TextBox Width="90" HorizontalAlignment="Right"></TextBox>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" >Password:
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" >
                <TextBox Width="90"></TextBox>
            </StatusBarItem>
            <StatusBarItem Content="  Port: " HorizontalAlignment="Right"/>
            <StatusBarItem HorizontalAlignment="Right" >
                <TextBox Width="40"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right" >
                <Button Content="Connect"/>
            </StatusBarItem>-->

            <StatusBarItem HorizontalAlignment="Right" >
                <StackPanel Orientation="Horizontal">

                    <Label Content="Host: "/>
                    <TextBox Width="100"></TextBox>

                    <Label Content="Username: "/>
                    <TextBox Width="90"></TextBox>
                    <Label Content="Password: "/>
                    <TextBox Width="90"></TextBox>
                    <Label Content="Port: "/>
                    <TextBox Width="40"/>
                    <Button Content="Connect" Width="75" Margin="25,0,25,0" mah:ControlsHelper.ContentCharacterCasing="Normal"/>
                </StackPanel>
            </StatusBarItem>


        </StatusBar>
    </Grid>

</Controls:MetroWindow>
